Metadata-Version: 2.4
Name: scivqa
Version: 0.1.0
Summary: Repository for Shared Task Sci VQA
Requires-Python: >=3.12
Description-Content-Type: text/markdown
Requires-Dist: encourage
Requires-Dist: hydra-core>=1.3.2
Requires-Dist: vllm>=0.7.3
Requires-Dist: datasets>=2.4.0
Requires-Dist: accelerate>=1.6.0
Requires-Dist: torch>=2.5.1
Requires-Dist: transformers==4.50.3
Requires-Dist: bitsandbytes>=0.45.3
Requires-Dist: outlines>=0.1.11
Requires-Dist: rouge-score>=0.1.2
Provides-Extra: dev
Requires-Dist: ipywidgets>=8.1.5; extra == "dev"
Requires-Dist: jupyterlab>=4.0; extra == "dev"
Requires-Dist: jupytext>=1.16.3; extra == "dev"
Requires-Dist: notebook>=7.0; extra == "dev"
Requires-Dist: matplotlib>=3.9.1; extra == "dev"
Requires-Dist: tensorboard>=2.17.0; extra == "dev"
Requires-Dist: pip-licenses>=4.5.1; extra == "dev"
Requires-Dist: nbconvert[webpdf]>=7.16.4; extra == "dev"

# 🧪 SciVQA

This repository contains the code for the SciVQA project, which is a research project focused on scientific question answering using vision large language models (vLLMs).

- 📦 **[uv](https://github.com/astral-sh/uv)**
  - A Python package manager replacing `pip` and `poetry`.
- 📝 **[pyproject](https://pip.pypa.io/en/stable/reference/build-system/pyproject-toml/)**
  - For project management.
- ⚙️ **[hydra](https://hydra.cc)**
  - For flexible configuration management.
- 📊 **[mlflow](https://mlflow.org)**
  - For experiment tracking and visualization online.
- 🌱 **[encourage](https://github.com/uhh-hcds/encourage)**
  - A custom library for handling LLM inference, prompt handling, and utility functions.

---

## 🚀 Initialization

### 📦 UV

To initialize the environment using `uv`, run the following command:

```bash
uv init
uv sync
```

## ⚡ Usage

When using this template you have to declare all your configuration parameters in the `conf/defaults.yaml` file. Also modify the `conf/model/defaults.yaml` and `conf/data/defaults.yaml` files to fit your needs.

### Run LLM

To run a LLM you can use config from the launch.json file. If you want to run it without it you can use the following command:

```bash
 CUDA_VISIBLE_DEVICES=1 uv run start_vllm_server_as_process.py model=qwen2-7B  
```

### Run Evaluation
To run the execution of the model you can use the following command:

```bash
uv run src/scivqa/evaluation/execution.py
```

If something broke in the evaluation you can use the following command to run the evaluation again:

```bash
uv run src/scivqa/evaluation/evaluate.py
```

But you have to change the `output_folder` in the `defaults.yaml` to the folder where the execution results are stored. 

